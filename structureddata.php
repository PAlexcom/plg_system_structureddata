<?php
/**
 * @package     Joomla.Plugin
 * @subpackage  System.StructuredData
 *
 * @copyright   Copyright (C) 2014 Alex Prut (Alexandru Pruteanu)
 * @license     Licensed under the MIT License; see LICENSE
 */

defined('JPATH_BASE') or die;

/**
 * System Plugin for parsing the HTML markup and convert
 * the data-* HTML5 attributes in Microdata or RDFa Lite 1.1 semantics.
 *
 * @package     Joomla.Plugin
 * @subpackage  System.StructuredData
 * @since       3.2
 */
class PlgSystemStructuredData extends JPlugin
{
	/**
	 * Parse the HTML markup and convert the data-* HTML5 attributes in Microdata or RDFa Lite 1.1 semantics,
	 * after that all the HTML was generated by the application logic.
	 *
	 * @return boolean True on success
	 *
	 * @since 3.2
	 */
	public function onAfterRender()
	{
		$app = JFactory::getApplication();

		// Prevent admin execution, and non HTML documents.
		if ($app->isAdmin()
			|| $app->getDocument()->getType() !== 'html')
		{
			return true;
		}

		// Prevent site execution when editing
		if ($app->isSite() && $app->input->get('layout') == 'edit')
		{
			return true;
		}

		// Tell the auto-loader to look for classes starting with "Lib" in a specific folder.
		JLoader::discover('Lib', JPATH_PLUGINS . '/system/structureddata/lib');

		// Retrieve the params
		$suffix   = explode(',', $this->params->get('suffix', 'sd'));

		$semantic = $this->params->get('semantic', 'microdata');

		// Get the body HTML
		$output = $app->getBody();

		// Make an instance of the parser
		$parser = new LibParserPlugin($semantic, $suffix);

		// Set the body HTML
		$app->setBody($parser->parse($output));
	}
}
